
<project name="rules" basedir="." default="jar">

	<property file="${basedir}/user.properties" />
	<property file="${basedir}/../../user.properties" />
	<property file="${basedir}/../../coverage.properties" />
	<import file="${basedir}/../../coverage.xml" optional="false" />
	<property file="${basedir}/build.properties" />
	<property file="${basedir}/../../build.properties" />



	<property name="src.dir" value="${basedir}/src" />
	<property name="test.dir" value="${basedir}/test" />
	<property name="target.dir" value="${basedir}/target" />
	<property name="classes.dir" value="${target.dir}/classes" />
	<property name="test.classes.dir" value="${target.dir}/test_classes" />
	<property name="snapshots.dir" value="${basedir}/../../snapshots" />
	<property name="3rdparty.dir" value="${basedir}/../../3rdparty" />
	<property name="junit_reports.dir" value="${basedir}/../../reports/junit" />
    <property name ="ant.home" value="${basedir}/lib"/> 
	
	<path id="classes.classpath">
		<pathelement location="${classes.dir}" />
		<pathelement location="${snapshots.dir}/common.jar" />
		<pathelement location="${snapshots.dir}/meta.jar" />
		<pathelement location="${snapshots.dir}/i18n.jar" />
	    <pathelement location="${snapshots.dir}/workflows.jar" />
		<pathelement location="${3rdparty.dir}/akka/akka-actor.jar" />
		<pathelement location="${3rdparty.dir}/asm/asm.jar" />
		<pathelement location="${3rdparty.dir}/ant/ant-launcher.jar" />
		<pathelement location="${3rdparty.dir}/clover/clover.jar" />
		<pathelement location="${3rdparty.dir}/coherence/coherence.jar" />
		<pathelement location="${3rdparty.dir}/commons/commons-beanutils.jar" />
		<pathelement location="${3rdparty.dir}/commons/commons-collections4.jar" />
		<pathelement location="${3rdparty.dir}/commons/commons-collections.jar" />
		<pathelement location="${3rdparty.dir}/commons/commons-lang3.jar" />
		<pathelement location="${3rdparty.dir}/commons/commons-text.jar" />
		<pathelement location="${3rdparty.dir}/eclipselink/eclipselink.jar" />
		<pathelement location="${3rdparty.dir}/eclipselink/javax.persistence.jar" />
		<pathelement location="${3rdparty.dir}/fasterxml/jackson-annotations.jar" />
		<pathelement location="${3rdparty.dir}/fasterxml/jackson-core.jar" />
		<pathelement location="${3rdparty.dir}/fasterxml/jackson-databind.jar" />
		<pathelement location="${3rdparty.dir}/glassfish/javax.ws.rs-api.jar" />
		<pathelement location="${3rdparty.dir}/google/guava.jar" />
		<pathelement location="${3rdparty.dir}/hamcrest/hamcrest-core.jar" />
		<pathelement location="${3rdparty.dir}/hamcrest/hamcrest-library.jar" />
        <pathelement location="${3rdparty.dir}/helium/helium-api.jar" />
		<pathelement location="${3rdparty.dir}/helium/helium-api.jar" />
        <pathelement location="${3rdparty.dir}/helium/helium-client.jar" />
        <pathelement location="${3rdparty.dir}/helium/helium-client.jar" />
		<pathelement location="${3rdparty.dir}/helium/helium-client.jar" />
        <pathelement location="${3rdparty.dir}/helium/helium-core.jar" />
        <pathelement location="${3rdparty.dir}/helium/helium-defaults.jar" />
		<pathelement location="${3rdparty.dir}/huh/huh.jar" />
		<pathelement location="${3rdparty.dir}/jodatime/joda-time.jar" />
		<pathelement location="${3rdparty.dir}/jsr305/jsr305.jar" />
		<pathelement location="${3rdparty.dir}/junit/junit.jar" />
		<pathelement location="${3rdparty.dir}/log4j/log4j-api.jar" />
		<pathelement location="${3rdparty.dir}/log4j/log4j-core.jar" />
		<pathelement location="${3rdparty.dir}/log4j/log4j-slf4j-impl.jar" />
		<pathelement location="${3rdparty.dir}/microservice-apis/documents-api-client.jar" />
        <pathelement location="${3rdparty.dir}/microservice-apis/form-api-client.jar" />
		<pathelement location="${3rdparty.dir}/microservice-apis/idea-api-client.jar" />
		<pathelement location="${3rdparty.dir}/microservice-apis/security-api-client.jar" />
		<pathelement location="${3rdparty.dir}/microservice-apis/strategy-api-client.jar" />
		<pathelement location="${3rdparty.dir}/mockito/mockito.jar" />
		<pathelement location="${3rdparty.dir}/oracle/sdoapi.jar" />
		<pathelement location="${3rdparty.dir}/prime-server-framework/declarative-events.jar" />
		<pathelement location="${3rdparty.dir}/prime-server-framework/framework-core.jar" />
		<pathelement location="${3rdparty.dir}/prime-server-framework/framework-rest.jar" />
        <pathelement location="${3rdparty.dir}/reactivex/rxjava.jar" />
		<pathelement location="${3rdparty.dir}/reactivex/rxjava-joins.jar" />
		<pathelement location="${3rdparty.dir}/slf4j/jcl-over-slf4j.jar" />
		<pathelement location="${3rdparty.dir}/slf4j/slf4j-api.jar" />
		<pathelement location="${3rdparty.dir}/spring/spring-beans.jar" />
		<pathelement location="${3rdparty.dir}/spring/spring-context.jar" />
		<pathelement location="${3rdparty.dir}/spring/spring-context-support.jar" />
		<pathelement location="${3rdparty.dir}/spring/spring-core.jar" />
		<pathelement location="${3rdparty.dir}/spring/spring-test.jar" />
		<pathelement location="${3rdparty.dir}/spring/spring-tx.jar" />
		<pathelement location="${3rdparty.dir}/validator/validation-api.jar" />
		<pathelement location="${3rdparty.dir}/weblogic/wls-api.jar" />
	    <pathelement location="${3rdparty.dir}/microservice-apis/company-registry-api-client.jar" />
		<pathelement location="${3rdparty.dir}/spring/spring-tx.jar" />
    </path>

	<path id="test.classpath">
        <pathelement location="${3rdparty.dir}/tak/core.jar" />
        <pathelement location="${3rdparty.dir}/tak/common.jar" />
        <pathelement location="${3rdparty.dir}/spring/spring-expression.jar" />
        <pathelement location="${3rdparty.dir}/spring/spring-aop.jar" />
		<pathelement location="${3rdparty.dir}/junit5/junit-jupiter-engine.jar" />
		<pathelement location="${3rdparty.dir}/junit5/junit-jupiter-api.jar" />
		<pathelement location="${3rdparty.dir}/junit5/junit-platform-commons.jar" />
		<pathelement location="${3rdparty.dir}/junit5/junit-platform-launcher.jar" />
		<pathelement location="${3rdparty.dir}/junit5/junit-platform-engine.jar" />
		<pathelement location="${3rdparty.dir}/junit5/junit-platform-suite-api.jar" />
		<pathelement location="${3rdparty.dir}/junit5/junit-vintage-engine.jar" />
		<pathelement location="${3rdparty.dir}/junit5/junit-platform-runner.jar" />
		<pathelement location="${3rdparty.dir}/junit5/opentest4j.jar" />
		<pathelement location="${3rdparty.dir}/junit5/apiguardian-api.jar" />
		<pathelement location="${3rdparty.dir}/junit5/junit-platform-console-standalone.jar" />
	</path>

	<target name="clean">
		<delete dir="${target.dir}" />
	</target>

	<target name="init">
		<mkdir dir="${test.dir}" />
		<mkdir dir="${target.dir}" />
		<mkdir dir="${classes.dir}" />
		<mkdir dir="${test.classes.dir}" />
		<mkdir dir="${snapshots.dir}" />
	</target>

	<target name="compile_src">
		<javac destdir="${classes.dir}" includeantruntime="${compile.antruntime}" failonerror="${compile.failonerror}" deprecation="${compile.deprecation}" debug="${compile.debug.flag}" verbose="${compile.verbose}" source="${compile.source}" target="${compile.target}" depend="${compile.depend}" fork="${compile.fork}" executable="${compile.executable}">

			<src path="${src.dir}" />
			<classpath>
				<path refid="classes.classpath" />
			</classpath>
		</javac>
	</target>

	<target name="compile_test"  unless="skip.test" depends="init">
		<javac destdir="${test.classes.dir}" includeantruntime="${compile.antruntime}" failonerror="${compile.failonerror}" deprecation="${compile.deprecation}" debug="${compile.debug.flag}" verbose="${compile.verbose}" source="${compile.source}" target="${compile.target}" depend="${compile.depend}" fork="${compile.fork}" executable="${compile.executable}">

			<src path="${test.dir}" />
			<classpath>
				<path refid="classes.classpath" />
				<path refid="test.classpath" />
				<path location="${basedir}/../common/target/test_classes" />
				<pathelement location="${3rdparty.dir}/prime-server-framework/framework-core-mock.jar" />
			</classpath>
		</javac>
	</target>

	<target name="compile" depends="init,compile_src,compile_test" />

	<target name="resources" depends="init">
		<copy todir="${classes.dir}">
			<fileset dir="${src.dir}" includes="**/*.xml" />
		</copy>
	</target>

	<target name="build" depends="clover,compile,resources" />

	<target name="test">
		<mkdir dir="${junit_reports.dir}" />
		<junit printsummary="${junit.printsummary}" haltonfailure="${junit.haltonfailure}" haltonerror="${junit.haltonerror}" showoutput="${junit.showoutput}" fork="true" forkmode="once" failureProperty="failed">
			<sysproperty key="clover.initstring" value="${clover.dbdir}/${clover.dbfile}" />
			<sysproperty key="rules.location" value="${classes.dir}/com/oracle/pgbu/rules/impl" />
			<classpath>
				<path refid="classes.classpath" />
				<path refid="test.classpath" />
				<pathelement path="${basedir}/../../.." />
				<pathelement path="${test.classes.dir}" />
				<path location="${basedir}/../common/target/test_classes" />
				<pathelement location="${3rdparty.dir}/prime-server-framework/framework-core-mock.jar" />
			</classpath>
			<formatter type="${unittest.output.type}" />
			<batchtest fork="true" todir="${junit_reports.dir}">
				<fileset dir="${test.classes.dir}" includes="${tests.patternset}" />
			</batchtest>
		</junit>
	</target>
	
	
	
	<target name = "sampletest" depends="compile">
	    <mkdir dir="${junit_reports.dir}" />
		<junitlauncher>
			<classpath>
				<path refid="classes.classpath" />
				<path refid="test.classpath" />
				<pathelement path="${basedir}/../../.." />
				<pathelement path="${test.classes.dir}" />
				<path location="${basedir}/../common/target/test_classes" />
			</classpath>
			<testclasses outputdir="${junit_reports.dir}">
			  <fileset dir="${test.classes.dir}">
			      <include name = "${tests.patternset}"/>
			  </fileset>
			</testclasses>
			<!--<test name = "com.oracle.pgbu.rules.impl.RulesEngineValidationTest"/>-->
		</junitlauncher>
	</target>  
	
	<target name ="consolelauncher" depends="compile">
	    <java classpathref="test.classpath" classname="org.junit.platform.console.ConsoleLauncher" fork="true">
		    <arg value ="--scan-classpath"/>
			<sysproperty key="clover.initstring" value="${clover.dbdir}/${clover.dbfile}" />
			<sysproperty key="rules.location" value="${classes.dir}/com/oracle/pgbu/rules/impl" />
	    </java> 
	</target>
	
	<target name = "test5" depends = "sampletest,consolelauncher"/>
	

	<target name="jar" depends="build">
		<taskdef name="gitver" classname="com.oracle.pgbu.hgver.GitVersionTask" classpath="${3rdparty.dir}/gitver/dvcs-versions.jar" />
		<gitver property="revision" />
		<jar destfile="${snapshots.dir}/rules.jar" basedir="${classes.dir}" includes="${jar.includes}" excludes="${jar.excludes}">
			<manifest>
				<attribute name="Bundle-ManifestVersion" value="2" />
				<attribute name="Bundle-Name" value="${ant.project.name}" />
				<attribute name="Bundle-SymbolicName" value="${ant.project.name}" />
				<attribute name="Bundle-Version" value="${release.version}" />
				<attribute name="Import-Package" value="${bundle.importpackages}" />
				<attribute name="Export-Package" value="${bundle.exportpackages}" />
				<attribute name="Revision" value="${revision}" />
				<attribute name="Implementation-Version" value="${release.version}" />
			</manifest>
		</jar>
	</target>

</project>
